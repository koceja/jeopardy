{"version":3,"sources":["components/apiInfo/index.js","components/Random/index.js","components/Navigation/index.js","constants/routes.js","components/App/index.js","serviceWorker.js","index.js"],"names":["App","window","location","assign","id","Button","variant","onClick","this","handleClick","bind","size","style","width","React","Component","Search","state","showResults","reveal","question","props","dangerouslySetInnerHTML","__html","fetchDataInitial","axios","get","then","response","setState","data","catch","error","console","log","fetchDataSecond","dataNext","fetchSet","next","fetcher","fetchData","e","answer","points","ansPoints","revealed","category","categoryTitle","title","value","className","margin","correct","backgroundColor","display","height","marginRight","color","marginLeft","Navigation","handleChange","event","AppBar","position","Tabs","onChange","centered","Tab","component","Link","to","label","basename","exact","path","RandomPage","APIPage","num","type","bg","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c6db3bf2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport \"./index.css\";\r\n\r\nclass App extends React.Component {\r\n  handleClick() {\r\n   window.location.assign('http://jservice.io/');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n              <div id=\"points\">\r\n                <p>API</p>\r\n              </div>\r\n      <div id=\"container\">\r\n        <div id=\"middle\">\r\n          <h2>JService.io</h2>\r\n          <p>\r\n            This webapp was created using the JService.io API. You can find the\r\n            API here.\r\n          </p>\r\n          <Button variant=\"contained\" onClick={this.handleClick.bind(this)} size=\"small\" style={{ width: \"90%\"}}>\r\n            Go to JService.io  \r\n          </Button>\r\n        </div>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport axios from 'axios';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nclass Search extends React.Component {\r\n  state = {\r\n    showResults: false,\r\n    reveal: false,\r\n  }\r\n\r\n  render() {\r\n    const { question } = this.props\r\n      return (\r\n          <div dangerouslySetInnerHTML={{__html: question}} >\r\n          </div>\r\n      );\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [{question: \"Loading...\"}],\r\n      reveal: false,\r\n      points: 0,\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.fetchDataInitial()\r\n    this.fetchDataSecond()\r\n  }\r\n\r\n  fetchDataInitial = () => {\r\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/random/')\r\n    .then(response => {\r\n      this.setState({ data: response.data });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  fetchDataSecond = () => {\r\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/random/')\r\n    .then(response => {\r\n      this.setState({ dataNext: response.data });\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n\r\n  fetchSet = () => {\r\n    const next = this.state.dataNext\r\n    this.setState({ data: next })\r\n    this.fetcher()\r\n  }\r\n\r\n  fetcher = () => {\r\n    try {\r\n      this.fetchData()\r\n    } catch (e) {\r\n      \r\n    }\r\n    const { dataNext } = this.state\r\n    if (dataNext[0].question === \"\" || dataNext[0].answer === \"\"){\r\n      try {\r\n        this.fetchData()\r\n      } catch (e) {\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n  fetchData = () => {\r\n    axios.get('https://cors-anywhere.herokuapp.com/http://jservice.io/api/random/')\r\n    .then(response => {\r\n      this.setState({ dataNext: response.data });\r\n    })\r\n    .catch(error => {\r\n      this.setState({ dataNext: \"Error Loading\" });\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  correct(ansPoints) {\r\n    var { points } = this.state\r\n    if (ansPoints === null || ansPoints === 0 || ansPoints === \"unknown\") {\r\n      points += 200\r\n    } else {\r\n      points += ansPoints\r\n    }\r\n    this.setState({ points })\r\n    this.reveal();\r\n  }\r\n\r\n  reveal() {\r\n    const { data } = this.state\r\n\r\n    if (typeof(data[0]) === 'undefined') {\r\n      this.setState({revealed: \"\"})\r\n    }\r\n    else{\r\n      if (this.state.reveal === false){\r\n        this.setState({revealed: data[0].answer})\r\n        this.setState({reveal: !this.state.reveal})\r\n      }\r\n      else{\r\n        this.setState({revealed: \"\"})\r\n        this.fetchSet()\r\n        this.setState({reveal: !this.state.reveal})\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state\r\n\r\n    if (typeof(data) === 'undefined' || typeof(data[0]) === 'undefined') {\r\n      return (\r\n        <p>Error</p>\r\n      )\r\n    }\r\n    else{\r\n      const { category } = data[0]\r\n      var categoryTitle = null;\r\n      if (typeof(category) == 'undefined') {\r\n        categoryTitle = \"Unknown\"\r\n      }\r\n      else{\r\n        categoryTitle = category.title\r\n      }\r\n      const answer = data[0].question\r\n      var value = data[0].value * 2\r\n      if (value === 0) {\r\n        value = \"unknown\"\r\n      }\r\n      const {revealed} = this.state\r\n      const {points} = this.state\r\n      if (this.state.reveal) {\r\n        return ( \r\n          <div>\r\n              <div id=\"points\">\r\n                <p>Points: {points}</p>\r\n              </div>\r\n \r\n          <div className=\"container\">\r\n            <div id=\"inner\">\r\n              <div id=\"top\">\r\n                <div id=\"category\">\r\n                  <p><strong>{ categoryTitle }</strong><br/>Value: { value }</p>\r\n                </div>\r\n              </div>\r\n              <div id=\"question\">\r\n                <h3><b>Answer</b></h3>\r\n                <p>{ answer }</p>\r\n              </div>\r\n              <div id=\"answer\">\r\n                <h3>Question</h3> \r\n                \r\n                  <div style={{ width: \"90%\", margin: \"0 auto\"}}>\r\n                    <Button variant=\"contained\" onClick={() => {this.correct(value)}} size=\"small\" style={{ backgroundColor: \"#49c749\", display: \"inline-block\", width: \"calc(50% - 10px)\", height: \"56px\", marginRight: \"10px\", color: \"#eeeeee\"}}>Correct</Button>\r\n                    <Button variant=\"contained\" onClick={() => {this.reveal()}} size=\"small\" style={{ backgroundColor: \"#e44f4f\", display: \"inline-block\", width: \"calc(50% - 10px)\", height: \"56px\", marginLeft: \"10px\", color: \"#eeeeee\"}}>Incorrect</Button>\r\n                  </div>\r\n                <p></p>\r\n                <Search question={revealed} />\r\n                <p></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )\r\n      } else {\r\n        return ( \r\n          <div>\r\n            \r\n              <div id=\"points\">\r\n                <p>Points: {points}</p>\r\n              </div>\r\n\r\n          <div className=\"container\">\r\n            <div id=\"inner\">\r\n              <div id=\"top\">\r\n                <div id=\"category\">\r\n                  <p><strong>{ categoryTitle }</strong><br/>Value: { value }</p>\r\n                </div>\r\n              </div>\r\n              <div id=\"question\">\r\n                <h3><b>Answer</b></h3>\r\n                <p>{ answer }</p>\r\n              </div>\r\n              <div id=\"answer\">\r\n                <h3>Question</h3> \r\n                <Button variant=\"contained\" onClick={() => {this.reveal()}} size=\"small\" style={{ width: \"90%\"}}>\r\n                  <p>Reveal</p>\r\n                </Button>\r\n                <p></p>\r\n                <Search question={revealed} />\r\n                <p></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        )\r\n      }\r\n      \r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Typography from \"@material-ui/core/typography\";\r\nimport Tabs from \"@material-ui/core/tabs\";\r\nimport Tab from \"@material-ui/core/tab\";\r\n\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nfunction TabContainer(props) {\r\n    return <Typography component=\"div\" style={{ padding: 8 * 3 }}>\r\n        {props.children}\r\n      </Typography>;\r\n}\r\n\r\nTabContainer.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      backgroundColor: theme.palette.background.paper\r\n    }\r\n  });\r\n\r\nclass Navigation extends React.Component {\r\n    state = {\r\n        value: false\r\n      };\r\n    \r\n      handleChange = (event, value) => {\r\n        this.setState({ value });\r\n      };\r\n\r\n    render() {\r\n        const { value } = this.state\r\n        return(\r\n            <div id=\"navigation-bar\">\r\n                <AppBar position=\"static\" style={{backgroundColor: \"#3500D3\"}}>\r\n\r\n        <Tabs value={this.state.value} onChange={this.handleChange} centered>\r\n                \r\n                <Tab component={Link} to={ROUTES.RANDOM} label=\"Random\" />\r\n                <Tab component={Link} to={ROUTES.API} label=\"API\" />\r\n        </Tabs>\r\n        </AppBar>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navigation;","export const API = '/apiInfo';\r\nexport const RANDOM = '/';\r\n","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Route,\n  HashRouter\n} from 'react-router-dom';\nimport ParticlesBg from 'particles-bg'\nimport './index.css'\n\n\nimport APIPage from '../apiInfo/index'\nimport RandomPage from '../Random/index'\nimport Navigation from '../Navigation/index'\n\n\nimport * as ROUTES from '../../constants/routes'\n\n\nclass App extends React.Component{\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <div id=\"app\">\n          <Navigation />\n          <Route exact path={ROUTES.RANDOM} component={RandomPage} />\n          <Route exact path={ROUTES.API} component={APIPage} />\n        </div>\n        <ParticlesBg num={40} type=\"cobweb\" bg={true} />\n      </HashRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}